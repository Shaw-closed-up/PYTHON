






[root@V0 pyscripts]# python3  diverror.py 
__name__  is __main__  sys.argv is  ['diverror.py']
 sys.argv[0]  is diverror.py 
please enter an integer:

ValueError, ZeroDivisionError, EOFError
Traceback (most recent call last):
  File "diverror.py", line 70, in <module>
    solution_error4()
  File "diverror.py", line 60, in solution_error4
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
UnboundLocalError: local variable 'result' referenced before assignment
            #UnboundLocalError:
                     在赋值之前引用了局部变量“result”
                #原有的脚本 没有写 else: 语句

[root@V0 pyscripts]# 

literal    英 [ˈlɪtərəl]   美 [ˈlɪtərəl]  
     adj.照字面的;原义的;逐字的;平实的，避免夸张
     n.[印]错排，文字上的错误

[root@V0 pyscripts]# python3  diverror.py 
__name__  is __main__  sys.argv is  ['diverror.py']
 sys.argv[0]  is diverror.py 
please enter an integer:   #是空输入

Error:  invalid literal for int() with base 10: ''

[root@V0 pyscripts]# 
[root@V0 pyscripts]# python3  diverror.py 
__name__  is __main__  sys.argv is  ['diverror.py']
 sys.argv[0]  is diverror.py 
please enter an integer:  qq    #'数据类型错误

Error:  invalid literal for int() with base 10: '  qq'

[root@V0 pyscripts]# 
[root@V0 pyscripts]# python3  diverror.py 
__name__  is __main__  sys.argv is  ['diverror.py']
 sys.argv[0]  is diverror.py 
please enter an integer:   #'#敲快捷键ctrl+d 中断输入,会报异常'
Error:  
[root@V0 pyscripts]#

[root@V0 pyscripts]# python3  diverror.py 
__name__  is __main__  sys.argv is  ['diverror.py']
 sys.argv[0]  is diverror.py 
please enter an integer:^C
#用户ctrl+ c 中断执行^CTraceback 报错

[root@V0 pyscripts]# 
[root@V0 pyscripts]# python3  diverror.py 
__name__  is __main__  sys.argv is  ['diverror.py']
 sys.argv[0]  is diverror.py 
please enter an integer:0  #'数字0 不能使用,除数不能是零!'

Error:  division by zero

[root@V0 pyscripts]# 

[root@V0 pyscripts]# python3  diverror.py 
__name__  is __main__  sys.argv is  ['diverror.py']
 sys.argv[0]  is diverror.py 
please enter an integer:33
 100/num is 3.030303 this is result
[root@V0 pyscripts]# 

  except     Exception  as  e:
    print('\nError: ', e)
  except  KeyboardInterrupt:
    print('\n#用户ctrl+ c 中断执行^CTraceback 报错')
  else:
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')
  print('\033[32;46;1m undefinedx is %f\033[0m' % undefinedx, \
  end= '----undefined\n')

[root@V0 pyscripts]# python3  diverror.py 
__name__  is __main__  sys.argv is  ['diverror.py']
 sys.argv[0]  is diverror.py 
please enter an integer:3
 100/num is 33.333333 this is result
Traceback (most recent call last):
  File "diverror.py", line 71, in <module>
    solution_error4()
  File "diverror.py", line 62, in solution_error4
    print('\033[32;46;1m undefinedx is %f\033[0m' % undefinedx, \
NameError: name 'undefinedx' is not defined
[root@V0 pyscripts]# 

Error:  name 'undefinedx' is not defined
[root@V0 pyscripts]# 

[root@V0 pyscripts]# python3  diverror.py 
  File "diverror.py", line 58
    try:
      ^
SyntaxError: invalid syntax  #语法错误
[root@V0 pyscripts]# 

traceback消息---异常信息

异常                描述
NameError       未声明/初始化对象
IndexError      序列中没有没有此索引
SyntaxError     语法错误
KeyboardInterrupt   用户中断执行 ##敲快捷键ctrl+ c 中断^CTraceback
EOFError         没有内建输入,到达EOF标记 #敲快捷键ctrl+d 中断输入,会报异常
IOError          输入/输出操作失败
ZeroDivisionError:  #零分割误差:除数不能是零
ValueError:     #输入的数据类型错误
TypeError:     #变量类型错误

  File "tryExceptElseFinallyRaise.py", line 88, in set_age
    print('%s is %d years old' % (name, age))
TypeError: %d format: a number is required, not str

当异常被引发后参数是作为附加帮助信息传递给异常
处理器的
>>>try:
...  10/0	
...except  ZeroDivisionError as e:
...  print('error', e)
...	
error division  by zero

else子句
•  在try范围中没有异常被检测到时,执行else子句

•  在else范围中的任何代码运行前,try范围中的所有代
码必须完全成功
>>>try:
...  result = 100 / int(input("number: "))
...
...except Exception as e:
...  print('Error:',e)
...else:
...  print(result)
...
number: 10	
10.0	

try:
  result = int(input("number: "))
  result = 100 / result
  except Exception as e:
    print('Error:',e)
  else:
    print(result)


finally子句
•  finally子句是无论异常是否发生,
是否捕捉都会执行的一段代码
•  如果打开文件后,因为发生异常导致文件没有关闭,
可能会发生数据损坏。
使用finally可以保证文件总是
能正常的关闭


[root@V0 pyscripts]# python3  diverror.py 
__name__  is __main__  sys.argv is  ['diverror.py']
 sys.argv[0]  is diverror.py 
please enter an integer:2
 undefinedx is 

变量undefinedx 未定义!

[root@V0 pyscripts]# cat  diverror.py
#!/usr/bin/env  python3
import	 sys, subprocess, random, string, getpass

print('\033[31;47;1m__name__  is %s  sys.argv is  %s\033[0m' \
% (__name__,sys.argv))

def  solution_error():
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num
    
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')
  except  ValueError:
    print('数据类型错误,或者是空输入,请输入整数')
  except  ZeroDivisionError:
    print('数字0 不能使用,除数不能是零!')
  except  KeyboardInterrupt:
    print('#用户ctrl+ c 中断执行^CTraceback 报错')
  except  EOFError:
    print('#敲快捷键ctrl+d 中断输入,会报异常')


def  solution_error2():
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num
    
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')
  except  Exception:
    print('ValueError, ZeroDivisionError, EOFError')
  except  KeyboardInterrupt:
    print('#用户ctrl+ c 中断执行^CTraceback 报错')


def  solution_error3():
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num
    
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')
  except  (ValueError, ZeroDivisionError, EOFError):
    print('\nValueError, ZeroDivisionError, EOFError')
  except  KeyboardInterrupt:
    print('\n#用户ctrl+ c 中断执行^CTraceback 报错')


def  solution_error4():
  
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num

  except     Exception  as  e: 
    print('\nError: ', e)
  except  KeyboardInterrupt:
    print('\n#用户ctrl+ c 中断执行^CTraceback 报错')
  else:
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')

def  solution_error5():
  
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num

    print('\033[33;1m undefinedx is \033[0m')
    print('\033[33;1m undefinedx is %f\033[0m' % undefinedx, \
    end= '----undefined\n')
  except  NameError:
    print('\n变量undefinedx 未定义!')
  except  (ValueError, ZeroDivisionError, EOFError): 
    print('\nError:--ValueError, ZeroDivisionError, EOFError')
  except  KeyboardInterrupt:
    print('\n#用户ctrl+ c 中断执行^CTraceback 报错')
  else:
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')


if __name__ == '__main__':

  print('\033[30;43;1m sys.argv[0]  is %s \033[0m' % sys.argv[0])
#  solution_error()
#  solution_error2()
#  solution_error3()
#  solution_error4()
  solution_error5()


[root@V0 pyscripts]# 

==========================
[root@V0 pyscripts]# python3  diverror.py 
__name__  is __main__  sys.argv is  ['diverror.py']
 sys.argv[0]  is diverror.py 
please enter an integer:0 

Error:--ValueError, ZeroDivisionError, EOFError
不管是否异常都会执行的finally 语句
end of Exception capture program 
   当前面出现 "except 语句" 所 没有捕获到的异常后,本语句也不会执行---
[root@V0 pyscripts]# python3  diverror.py 
__name__  is __main__  sys.argv is  ['diverror.py']
 sys.argv[0]  is diverror.py 
please enter an integer:
Error:--ValueError, ZeroDivisionError, EOFError
不管是否异常都会执行的finally 语句
end of Exception capture program 
   当前面出现 "except 语句" 所 没有捕获到的异常后,本语句也不会执行---
[root@V0 pyscripts]# python3  diverror.py 
__name__  is __main__  sys.argv is  ['diverror.py']
 sys.argv[0]  is diverror.py 
please enter an integer:^C
#用户ctrl+ c 中断执行^CTraceback 报错
不管是否异常都会执行的finally 语句
end of Exception capture program 
   当前面出现 "except 语句" 所 没有捕获到的异常后,本语句也不会执行---
[root@V0 pyscripts]# python3  diverror.py 
__name__  is __main__  sys.argv is  ['diverror.py']
 sys.argv[0]  is diverror.py 
please enter an integer:33
 undefinedx is 
 100/num is 3.030303 this is result
不管是否异常都会执行的finally 语句
end of Exception capture program 
   当前面出现 "except 语句" 所 没有捕获到的异常后,本语句也不会执行---
[root@V0 pyscripts]# cat   diverror.py
#!/usr/bin/env  python3
import	 sys, subprocess, random, string, getpass

print('\033[31;47;1m__name__  is %s  sys.argv is  %s\033[0m' \
% (__name__,sys.argv))

def  solution_error():
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num
    
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')
  except  ValueError:
    print('数据类型错误,或者是空输入,请输入整数')
  except  ZeroDivisionError:
    print('数字0 不能使用,除数不能是零!')
  except  KeyboardInterrupt:
    print('#用户ctrl+ c 中断执行^CTraceback 报错')
  except  EOFError:
    print('#敲快捷键ctrl+d 中断输入,会报异常')


def  solution_error2():
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num
    
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')
  except  Exception:
    print('ValueError, ZeroDivisionError, EOFError')
  except  KeyboardInterrupt:
    print('#用户ctrl+ c 中断执行^CTraceback 报错')


def  solution_error3():
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num
    
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')
  except  (ValueError, ZeroDivisionError, EOFError):
    print('\nValueError, ZeroDivisionError, EOFError')
  except  KeyboardInterrupt:
    print('\n#用户ctrl+ c 中断执行^CTraceback 报错')


def  solution_error4():
  
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num

  except     Exception  as  e: 
    print('\nError: ', e)
  except  KeyboardInterrupt:
    print('\n#用户ctrl+ c 中断执行^CTraceback 报错')
  else:
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')

def  solution_error5():
  
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num

    print('\033[33;1m undefinedx is \033[0m')
#    print('\033[33;1m undefinedx is %f\033[0m' % undefinedx, \
#    end= '----undefined\n')
  except  NameError:
    print('\n变量undefinedx 未定义!')
  except  (ValueError, ZeroDivisionError, EOFError): 
    print('\nError:--ValueError, ZeroDivisionError, EOFError')
  except  KeyboardInterrupt:
    print('\n#用户ctrl+ c 中断执行^CTraceback 报错')
  else:   #不发生异常才执行的语句
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')
  finally:
    print('不管是否异常都会执行的finally 语句')
  print('end of Exception capture program \n \
  当前面出现 "except 语句" 所 没有捕获到的异常后,本语句也不会执行---')

if __name__ == '__main__':

  print('\033[30;43;1m sys.argv[0]  is %s \033[0m' % sys.argv[0])
#  solution_error()
#  solution_error2()
#  solution_error3()
#  solution_error4()
  solution_error5()


[root@V0 pyscripts]# 
[root@V0 pyscripts]# vim  tryExceptElseFinallyRaise.py 

[root@V0 pyscripts]# python3  tryExceptElseFinallyRaise.py

__name__  is __main__  sys.argv is  ['tryExceptElseFinallyRaise.py']
 sys.argv[0]  is tryExceptElseFinallyRaise.py 
Traceback (most recent call last):
  File "tryExceptElseFinallyRaise.py", line 101, in <module>
    set_age(sys.argv[1],sys.argv[2])
IndexError: list index out of range


[root@V0 pyscripts]# python3  tryExceptElseFinallyRaise.py  peri  22

__name__  is __main__  sys.argv is  ['tryExceptElseFinallyRaise.py', 'peri', '22']
 sys.argv[0]  is tryExceptElseFinallyRaise.py 
Traceback (most recent call last):
  File "tryExceptElseFinallyRaise.py", line 101, in <module>
    set_age(sys.argv[1],sys.argv[2])
  File "tryExceptElseFinallyRaise.py", line 89, in set_age
    print('%s is %d years old' % (name, age))
TypeError: %d format: a number is required, not str

[root@V0 pyscripts]# 

===========================

traceback消息---异常信息

异常                描述
NameError       未声明/初始化对象
IndexError      序列中没有此索引
SyntaxError     语法错误
KeyboardInterrupt   用户中断执行 ##敲快捷键ctrl+ c 中断^CTraceback
EOFError         没有内建输入,到达EOF标记 #敲快捷键ctrl+d 中断输入,会报异常
IOError          输入/输出操作失败
ZeroDivisionError:  #零分割误差:除数不能是零
ValueError:     #输入的数据类型错误
TypeError:     #变量类型错误
FileExistsError:
AssertionError: 


>>> import  os
>>> os.mkdir('/osdir')
>>> os.listdir('/osdir')
[]
>>> os.symlink('/etc/hosts', '/osdir')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
FileExistsError: [Errno 17] File exists: '/etc/hosts' -> '/osdir'
>>> os.symlink('/etc/hosts', '/osdir/copyhosts')
>>> 


>>> int('12')
12
>>> int('')
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: invalid literal for int() with base 10: ''
>>> int()
0
>>> str(120)
'120'
>>> type(str(120))
<class 'str'>
>>> type(120)
<class 'int'>
>>> 
>>> type(str(120))
<class 'str'>
>>> type(120)
<class 'int'>
>>> x = type('120')
>>> type(x)
<class 'type'>
>>> x2 = type(120)
>>> type(x2)
<class 'type'>
>>> 
>>> type(120) == int
True
>>> type(120) == str
False
>>> type('120') == str
True
>>> ==== 判断一个变量的类型（isinstance，type）
需要用到type函数, isinstance(数据值或变量,将要比较的类型)

>>> isinstance('120',str)
True
>>> isinstance('120',int)
False
>>> isinstance(120,int)
True
>>> 
>>> x= '120'
>>> isinstance(x,str)
True
>>> isinstance(x,int)
False
>>> 

>>> isinstance([10,120],list)
True
>>> type([10,120])
<class 'list'>
>>> type([10,120]) == list
True
>>> type((10,120))
<class 'tuple'>
>>>
>>> type((10,120)) == tuple
True
>>> 
>>> isinstance((10,120),tuple)
True
>>> type({10,'120'})
<class 'set'>
>>> isinstance({10,'120'},set)
True
>>> type({10,'120'}) == set
True
>>> 
>>> type(12.3303)
<class 'float'>
>>> type(12.3303) == float
True
>>> isinstance(12.3303,float)
True
>>> 

[root@V0 pyscripts]# python3
Python 3.6.7 (default, Apr  2 2019, 11:30:00) 
[GCC 4.8.5 20150623 (Red Hat 4.8.5-16)] on linux
Type "help", "copyright", "credits" or "license" for more information.
>>> name='hiys'
>>> nalist = ['peri','bob','hiys']
>>> name  in  nalist
True
>>> 'bob' in  nalist
True
>>> 'lucy' in  nalist
False
>>> name = 'lily'
>>> name  in  nalist
False
>>> age = 18
>>> 0 < age < 100
True
>>> age = 180
>>> 0 < age < 100
False
>>> 

raise语句
•  要想引发异常,最简单的形式就是输入关键字raise,
后面跟要引发的异常的名称
•  执行raise语句时,Python会创建指定的异常类的一个对象
•  raise语句还可指定对异常对象进行初始化的参数

assert       英 [əˈsɜ:t]   美 [əˈsɜ:rt]  
     vt.声称，断言;维护，坚持;坚持自己的主张;生效

•  断言是一句必须等价于布尔值为真的判定
•  此外,发生异常也意味着表达式为假



[root@V0 pyscripts]# python3   tryExceptElseFinallyRaise.py  qq  90

__name__  is __main__  sys.argv is  ['tryExceptElseFinallyRaise.py', 'qq', '90']
 sys.argv[0]  is tryExceptElseFinallyRaise.py 

 #变量类型错误,应该是int(age)	 %d format: a number is required, not str
qq is 90 years old
--------------------------
-----如果执行了raise 语句,此行代码不会输出----
qq is 90  old
-**-如果执行了assert 语句,此行代码不会输出-*-
name is qq
不管是否异常都会执行的finally 语句
end of Exception capture program 
   当前面出现 "except 语句" 所 没有捕获到的异常后,本语句也不会执行---

-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------

[root@V0 pyscripts]# python3   tryExceptElseFinallyRaise.py  qaa  90

__name__  is __main__  sys.argv is  ['tryExceptElseFinallyRaise.py', 'qaa', '90']
 sys.argv[0]  is tryExceptElseFinallyRaise.py 

 #变量类型错误,应该是int(age)	 %d format: a number is required, not str
qaa is 90 years old
--------------------------
-----如果执行了raise 语句,此行代码不会输出----
qaa is 90  old
不管是否异常都会执行的finally 语句
Traceback (most recent call last):
  File "tryExceptElseFinallyRaise.py", line 89, in set_age
    print('%s is %d years old' % (name, age))
TypeError: %d format: a number is required, not str

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "tryExceptElseFinallyRaise.py", line 125, in <module>
    set_age(sys.argv[1],sys.argv[2])
  File "tryExceptElseFinallyRaise.py", line 101, in set_age
    'name is out of listRange---AssertionError:'
AssertionError: name is out of listRange---AssertionError:
[root@V0 pyscripts]# 

-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------

[root@V0 pyscripts]# python3   tryExceptElseFinallyRaise.py  peri  909

__name__  is __main__  sys.argv is  ['tryExceptElseFinallyRaise.py', 'peri', '909']
 sys.argv[0]  is tryExceptElseFinallyRaise.py 

 #变量类型错误,应该是int(age)	 %d format: a number is required, not str
peri is 909 years old
--------------------------
不管是否异常都会执行的finally 语句
Traceback (most recent call last):
  File "tryExceptElseFinallyRaise.py", line 89, in set_age
    print('%s is %d years old' % (name, age))
TypeError: %d format: a number is required, not str

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "tryExceptElseFinallyRaise.py", line 125, in <module>
    set_age(sys.argv[1],sys.argv[2])
  File "tryExceptElseFinallyRaise.py", line 95, in set_age
    raise  ValueError("输入的数据错误,超出规定范围")
ValueError: 输入的数据错误,超出规定范围
[root@V0 pyscripts]# 
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------

[root@V0 pyscripts]# python3   tryExceptElseFinallyRaise.py
__name__  is __main__  sys.argv is  ['tryExceptElseFinallyRaise.py']
 sys.argv[0]  is tryExceptElseFinallyRaise.py 

IndexError 没有输入位置参数,序列中没有没有此索引
 list index out of range
[root@V0 pyscripts]# 
-----------------------------------------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------------------------------------

[root@V0 pyscripts]# cat   tryExceptElseFinallyRaise.py
#!/usr/bin/env  python3
import	 sys, subprocess, random, string, getpass

print('\033[31;47;1m__name__  is %s  sys.argv is  %s\033[0m' \
% (__name__,sys.argv))

def  solution_error():
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num
    
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')
  except  ValueError:
    print('输入的数据类型错误,或者是空输入,请输入整数')
  except  ZeroDivisionError:
    print('数字0 不能使用,除数不能是零!')
  except  KeyboardInterrupt:
    print('#用户ctrl+ c 中断执行^CTraceback 报错')
  except  EOFError:
    print('#敲快捷键ctrl+d 中断输入,会报异常')


def  solution_error2():
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num
    
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')
  except  Exception:
    print('ValueError, ZeroDivisionError, EOFError')
  except  KeyboardInterrupt:
    print('#用户ctrl+ c 中断执行^CTraceback 报错')


def  solution_error3():
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num
    
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')
  except  (ValueError, ZeroDivisionError, EOFError):
    print('\nValueError, ZeroDivisionError, EOFError')
  except  KeyboardInterrupt:
    print('\n#用户ctrl+ c 中断执行^CTraceback 报错')


def  solution_error4():
  
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num

  except     Exception  as  e: 
    print('\nError: ', e)
  except  KeyboardInterrupt:
    print('\n#用户ctrl+ c 中断执行^CTraceback 报错')
  else:
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')

def  solution_error5():
  
  try:
    num = int(input("please enter an integer:"))
    result = 100 / num

    print('\033[33;1m undefinedx is \033[0m')
#    print('\033[33;1m undefinedx is %f\033[0m' % undefinedx, \
#    end= '----undefined\n')
  except  NameError:
    print('\n变量undefinedx 未定义!')
  except  (ValueError, ZeroDivisionError, EOFError): 
    print('\nError:--ValueError, ZeroDivisionError, EOFError')
  except  KeyboardInterrupt:
    print('\n#用户ctrl+ c 中断执行^CTraceback 报错')
  else:   #不发生异常才执行的语句
    print('\033[32;46;1m 100/num is %f\033[0m' % result, \
    end= ' this is result\n')
  finally:
    print('不管是否异常都会执行的finally 语句')
  print('end of Exception capture program \n \
  当前面出现 "except 语句" 所 没有捕获到的异常后,本语句也不会执行---')

def  set_age(name,age):
  try:  
    print('%s is %d years old' % (name, age))
  except  TypeError as  te:
    print('\n #变量类型错误,应该是int(age)\t',te)
    print('%s is %d years old' % (name, int(age)))
    print('--------------------------')
    if  not  0< int(age) < 100:
      raise  ValueError("输入的数据错误,超出规定范围")
   # raise 语句能够主动触发异常
    print('-----如果执行了raise 语句,此行代码不会输出----')
    print('%s is %s  old' % (name,age))     
  # 断言是一句必须等价于布尔值为真的判定
    assert  name  in  ['peri','hiys','qq'], \
      'name is out of listRange---AssertionError:'

    print('-**-如果执行了assert 语句,此行代码不会输出-*-')
    print('name is %s' % name)
  else:   #不发生异常才执行的语句
    print('\033[32;46;1m#不发生异常才执行的语句\033[0m', \
    end= ' this is else\n')
  finally:
    print('不管是否异常都会执行的finally 语句')
  print('end of Exception capture program \n \
  当前面出现 "except 语句" 所 没有捕获到的异常后,本语句也不会执行---')




if __name__ == '__main__':

  print('\033[30;43;1m sys.argv[0]  is %s \033[0m' % sys.argv[0])
#  solution_error()
#  solution_error2()
#  solution_error3()
#  solution_error4()
#  solution_error5()
  try:
    set_age(sys.argv[1],sys.argv[2])
  except IndexError as  ie:
    print('\nIndexError 没有输入位置参数,序列中没有没有此索引\n',ie)
  

[root@V0 pyscripts]# 
[root@V0 pyscripts]# scp  tryExceptElseFinallyRaise.py  root@192.168.0.254:'/root/桌面/python1_2/python2/day05' 

root@192.168.0.254's password: 




