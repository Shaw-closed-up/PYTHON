
https://v3.bootcss.com/examples/blog/

Home New features Press New hires About


[root@room9pc01 ~]# ls   Django/
django1120  mysite  pkg1120.txt

[root@room9pc01 ~]# cd   Django/

[root@room9pc01 Django]# cat    pkg1120.txt 
Django==1.11.20
PyMySQL==0.9.3
pytz==2019.1
SQLAlchemy==1.3.3
tornado==6.0.2
[root@room9pc01 Django]# pwd
/root/Django

---------------------------------------------- 激活  虚拟环境 -------------------------------

[root@room9pc01 Django]# source    django1120/bin/activate

(django1120) [root@room9pc01 Django]# pip    freeze
Django==1.11.20
PyMySQL==0.9.3
pytz==2019.1
SQLAlchemy==1.3.3
tornado==6.0.2

(django1120) [root@room9pc01 Django]# pip   --version

pip 19.1 from /root/Django/django1120/lib/python3.6/site-packages/pip (python 3.6)

(django1120) [root@room9pc01 Django]# python    --version
Python 3.6.7

(django1120) [root@room9pc01 Django]# ls
django1120  mysite  pkg1120.txt
(django1120) [root@room9pc01 Django]# cd    mysite/

----------------------------------------- #开启 django网站 服务 ----------------------

python manage.py runserver （0.0.0.0 | 0）:8000 
会让 Django 监听所有网络接口和IP地址，因此也就让其它电脑可连接到开发服务器了。

(django1120) [root@room9pc01 mysite]# python    manage.py   runserver  0.0.0.0:8800
Performing system checks...

System check identified no issues (0 silenced).
May 01, 2019 - 11:27:05
Django version 1.11.20, using settings 'mysite.settings'
Starting development server at http://0.0.0.0:8800/
Quit the server with CONTROL-C.

http://127.0.0.1:8800/admin/
http://192.168.0.254:8800/blog/indexxx
http://176.121.210.37:8800/blog/

-------------------------------------------------------------------------
http://192.168.0.10:8800/blog/   无法连接
-------------------------------  原因: 虽然文件mysite/mysite/settings.py 中 有ip地址 '192.168.0.10'
   --------------------------  但是事实上 服务器并没有这个地址, 所以不能访问服务器资源

[root@room9pc01 mysite]# grep   -n  'ALLOWED_HOSTS'  /root/Django/mysite/mysite/settings.py 
28:ALLOWED_HOSTS = ['192.168.0.10','192.168.0.254','127.0.0.1', '176.121.210.37']



[root@room9pc01 ~]# cd  /root/Django/mysite/

[root@room9pc01 mysite]# ls   ../
django1120  mysite  pkg1120.txt

[root@room9pc01 mysite]# ls
blog  db.sqlite3  manage.py  mysite

[root@room9pc01 mysite]# ls  mysite/
__init__.py  __pycache__  settings.py  urls.py  wsgi.py



[root@room9pc01 mysite]# cat   mysite/__init__.py 
import   pymysql
pymysql.install_as_MySQLdb()


[root@room9pc01 mysite]# cat   -n   mysite/settings.py 
     1	"""
     2	Django settings for mysite project.
     3	
     4	Generated by 'django-admin startproject' using Django 1.11.20.
     5	
     6	For more information on this file, see
     7	https://docs.djangoproject.com/en/1.11/topics/settings/
     8	
     9	For the full list of settings and their values, see
    10	https://docs.djangoproject.com/en/1.11/ref/settings/
    11	"""
    12	
    13	import os
    14	
    15	# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
    16	BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
    17	
    18	
    19	# Quick-start development settings - unsuitable for production
    20	# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/
    21	
    22	# SECURITY WARNING: keep the secret key used in production secret!
    23	SECRET_KEY = 'icvvo0@hnz#d$-o8^&pxwt)vx_=r0pb=_!cwb4tcj8nyj7z+fv'
    24	
    25	# SECURITY WARNING: don't run with debug turned on in production!
    26	DEBUG = True
    27	
    28	ALLOWED_HOSTS = ['192.168.0.10','192.168.0.254','127.0.0.1', '176.121.210.37']
    29	
    30	
    31	# Application definition
    32	
    33	INSTALLED_APPS = [
    34	    'django.contrib.admin',
    35	    'django.contrib.auth',
    36	    'django.contrib.contenttypes',
    37	    'django.contrib.sessions',
    38	    'django.contrib.messages',
    39	    'django.contrib.staticfiles',
    40	    'blog'
    41	]
    42	
    43	MIDDLEWARE = [
    44	    'django.middleware.security.SecurityMiddleware',
    45	    'django.contrib.sessions.middleware.SessionMiddleware',
    46	    'django.middleware.common.CommonMiddleware',
    47	    'django.middleware.csrf.CsrfViewMiddleware',
    48	    'django.contrib.auth.middleware.AuthenticationMiddleware',
    49	    'django.contrib.messages.middleware.MessageMiddleware',
    50	    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    51	]
    52	
    53	ROOT_URLCONF = 'mysite.urls'
    54	
    55	TEMPLATES = [
    56	    {
    57	        'BACKEND': 'django.template.backends.django.DjangoTemplates',
    58	        'DIRS': [],
    59	        'APP_DIRS': True,
    60	        'OPTIONS': {
    61	            'context_processors': [
    62	                'django.template.context_processors.debug',
    63	                'django.template.context_processors.request',
    64	                'django.contrib.auth.context_processors.auth',
    65	                'django.contrib.messages.context_processors.messages',
    66	            ],
    67	        },
    68	    },
    69	]
    70	
    71	WSGI_APPLICATION = 'mysite.wsgi.application'
    72	
    73	
    74	# Database
    75	# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
    76	
    77	DATABASES = {
    78	    'default': {
    79	        'ENGINE': 'django.db.backends.mysql',
    80	        'NAME': 'site01',
    81	        'USER': 'root',
    82	        'PASSWORD': '123',
    83	        'HOST': '127.0.0.1',
    84	        'PORT': '3306',
    85	    }
    86	}
    87	
    88	
    89	# Password validation
    90	# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
    91	
    92	AUTH_PASSWORD_VALIDATORS = [
    93	    {
    94	        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    95	    },
    96	    {
    97	        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    98	    },
    99	    {
   100	        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
   101	    },
   102	    {
   103	        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
   104	    },
   105	]
   106	
   107	
   108	# Internationalization
   109	# https://docs.djangoproject.com/en/1.11/topics/i18n/
   110	
   111	LANGUAGE_CODE = 'zh-Hans'
   112	
   113	TIME_ZONE = 'Asia/Shanghai'
   114	
   115	USE_I18N = True
   116	
   117	USE_L10N = True
   118	
   119	USE_TZ = True
   120	
   121	
   122	# Static files (CSS, JavaScript, Images)
   123	# https://docs.djangoproject.com/en/1.11/howto/static-files/
   124	
   125	STATIC_URL = '/static/'
[root@room9pc01 mysite]# 


[root@room9pc01 mysite]# tail  -8   mysite/urls.py 
"""
from django.conf.urls import url,include
from django.contrib import admin

urlpatterns = [
    url(r'^admin/', admin.site.urls),
    url(r'^blog/', include("blog.urls"))
]

--------------------------------------------------------------------------------------------------


[root@room9pc01 mysite]# ls    blog/
admin.py  __init__.py  models.py    static     tests.py  views.py
apps.py   migrations   __pycache__  templates  urls.py

[root@room9pc01 mysite]# cat    blog/admin.py 
from django.contrib import admin
from   .models  import  Post

# Register your models here.
admin.site.register(Post)

[root@room9pc01 mysite]# head  -13   blog/models.py 
from django.db import models
import django.utils.timezone as timezone

# Create your models here.

class Post(models.Model):
    title = models.CharField(max_length=100)
    desc = models.CharField(max_length=500)
    content = models.TextField()
    author = models.CharField(max_length=50)
    add_date = models.DateTimeField('添加日期', default=timezone.now)
    mod_date = models.DateTimeField('最后修改日期', auto_now=True)

[root@room9pc01 mysite]# cat   -n   blog/views.py 
     1	from django.shortcuts import render, HttpResponse
     2	
     3	# Create your views here.
     4	
     5	def  index(request):
     6	  page = request.GET.get('page');
     7	  return render(request, "index.html")
     8	def  indexx(request):
     9	  return render(request, "index.html")
    10	def  hanshu(request):
    11	  return HttpResponse("中文页面.Django/mysite/blog/views.py---hanshu");
    12	
[root@room9pc01 mysite]# cat   -n   blog/urls.py 
     1	from django.conf.urls import url
     2	from  .views  import  index, hanshu, indexx
     3	
     4	
     5	urlpatterns = [
     6	    url(r'^$', index),
     7	    url(r'^indexx$', indexx),
     8	    url(r'^indexxx', hanshu),
     9	]

[root@room9pc01 mysite]# grep   -n  'ALLOWED_HOSTS'  /root/Django/mysite/mysite/settings.py 
28:ALLOWED_HOSTS = ['192.168.0.10','192.168.0.254','127.0.0.1', '176.121.210.37']


[root@room9pc01 mysite]# ls   blog/static/
bootstrap  css  js

[root@room9pc01 mysite]# ls  blog/templates/
index.html

[root@room9pc01 mysite]# ls   blog/migrations/
0001_initial.py  __init__.py  __pycache__

[root@room9pc01 mysite]# pwd
/root/Django/mysite


[root@room9pc01 mysite]# ls   blog/
admin.py  __init__.py  models.py    static     tests.py  views.py
apps.py   migrations   __pycache__  templates  urls.py

[root@room9pc01 mysite]# vim   blog/views.py 

[root@room9pc01 mysite]# cat   -n    blog/views.py

     1	from django.shortcuts import render, HttpResponse
     2	from  .models  import  Post
     3	
     4	# Create your views here.
     5	
     6	def  index(request):
     7	  page = request.GET.get('page');
     8	  listPost = Post.objects.all()
     9	  return render(request, "index.html", {'lstPost': listPost})
    10	def  indexx(request):
    11	  return render(request, "index.html")
    12	def  hanshu(request):
    13	  return HttpResponse("中文页面.Django/mysite/blog/views.py---hanshu");
    14	

[root@room9pc01 mysite]# 


[root@room9pc01 mysite]# vim   blog/templates/index.html 

  1 {% load  static %}
  2 <!DOCTYPE html>
  3 <html lang="zh-CN">
  4   <head>
  5     <meta charset="utf-8">
  6     <meta http-equiv="X-UA-Compatible" content="IE=edge">
  7     <meta name="viewport" content="width=device-width, initial-scale=1">
  8     <!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！
     -->
.........................
 15     <!-- Bootstrap core CSS -->
 16     <link href="{% static 'bootstrap/css/bootstrap.min.css' %}" rel="sty    lesheet">
 17 
 18     <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
 19     <link href="../../assets/css/ie10-viewport-bug-workaround.css" rel="    stylesheet">
 20 
 21     <!-- Custom styles for this template -->
 22     <link href="{% static 'css/blog.css' %}" rel="stylesheet">
 23 
..................................
 56       <div class="row">
 57 
 58         <div class="col-sm-8 blog-main">
 59           {% for  post  in  lstPost %}   # for循环开头
 60           <div class="blog-post">
 61             <h2 class="blog-post-title">{{ post.title }}</h2>
 62             <p class="blog-post-meta">{{ post.add_date }} by<a href="#">    {{ post.author }}</a></p>
 63 
.....................................
 70             <p>
 71              {{ post.content  }}
 72             </p>
 73             <p>Cras mattis consectetur purus sit amet fermentum. Sed pos    uere consectetur est at lobortis.</p>
 74           </div><!-- /.blog-post -->
 75 
 76 <!--           <div class="blog-post">
......................................
100 #          </div> /.blog-post -->
101           {% endfor %}     #for循环结束
102           <nav>


[root@room9pc01 mysite]# vim    blog/views.py

[root@room9pc01 mysite]# cat   -n    blog/views.py

     1	from django.shortcuts import render, HttpResponse
     2	from  .models  import  Post
     3	
     4	# Create your views here.
     5	
     6	def  index(request):
     7	  page = request.GET.get('page');
     8	  listPost = Post.objects.all()
     9	  return render(request, "index.html", {'lstPost': listPost})
    10	def  indexx(request):
    11	  return render(request, "index.html")
    12	def  hanshu(request):
    13	  return HttpResponse("中文页面.Django/mysite/blog/views.py---hanshu");
    14	
    15	def  test(request):
    16	  a = [0, 1, 2, 3, 4]
    17	  b = 'hello world'
    18	  return render(request,'t.html', {'a':a, 'b' : b})

[root@room9pc01 mysite]# vim    blog/urls.py 

[root@room9pc01 mysite]# cat   -n   blog/urls.py

     1	from django.conf.urls import url
     2	from  .views  import  index, hanshu, indexx, test
     3	
     4	urlpatterns = [
     5	    url(r'^$', index),
     6	    url(r'^indexx$', indexx),
     7	    url(r'^indexxx', hanshu),
     8	    url(r'^t', test),
     9	]
[root@room9pc01 mysite]# ls  blog/templates/
index.html
[root@room9pc01 mysite]# vim   blog/templates/t.html

[root@room9pc01 mysite]# cat  -n   blog/templates/t.html
     1	{% load  static %}
     2	<!DOCTYPE html>
     3	<html lang="zh-CN">
     4	  <head>
     5	    <meta charset="utf-8">
     6	    <meta http-equiv="X-UA-Compatible" content="IE=edge">
     7	    <meta name="viewport" content="width=device-width, initial-scale=1">
     8	    <!-- 上述3个meta标签*必须*放在最前面，任何其他内容都*必须*跟随其后！ -->
     9	    <meta name="description" content="">
    10	    <meta name="author" content="">
    11	    <link rel="icon" href="../../favicon.ico">
    12	
    13	    <title>Blog Template for Bootstrap</title>
    14	
    15	    <!-- Bootstrap core CSS -->
    16	    <link href="{% static 'bootstrap/css/bootstrap.min.css' %}" rel="stylesheet">
    17	
    18	    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
    19	    <link href="../../assets/css/ie10-viewport-bug-workaround.css" rel="stylesheet">
    20	
    21	    <!-- Custom styles for this template -->
    22	    <link href="{% static 'css/blog.css' %}" rel="stylesheet">
    23	
    24	    <!-- Just for debugging purposes. Don't actually copy these 2 lines! -->
    25	    <!--[if lt IE 9]><script src="../../assets/js/ie8-responsive-file-warning.js"></script><![endif]-->
    26	    <script src="../../assets/js/ie-emulation-modes-warning.js"></script>
    27	
    28	    <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
    29	    <!--[if lt IE 9]>
    30	      <script src="https://cdn.bootcss.com/html5shiv/3.7.3/html5shiv.min.js"></script>
    31	      <script src="https://cdn.bootcss.com/respond.js/1.4.2/respond.min.js"></script>
    32	    <![endif]-->
    33	  </head>
    34	
    35	  <body>
    36	
    37	    <div class="blog-masthead">
    38	      <div class="container">
    39	        <nav class="blog-nav">
    40	          <a class="blog-nav-item active" href="#">Home</a>
    41	          <a class="blog-nav-item" href="#">New features</a>
    42	          <a class="blog-nav-item" href="#">Press</a>
    43	          <a class="blog-nav-item" href="#">New hires</a>
    44	          <a class="blog-nav-item" href="#">About</a>
    45	        </nav>
    46	      </div>
    47	    </div>
    48	
    49	    <div class="container">
    50	
    51	      <div class="blog-header">
    52	        <h1 class="blog-title">The Bootstrap Blog</h1>
    53	        <p class="lead blog-description">用引导程序创建博客的官方示例模板。</p>
    54	      </div>
    55	
    56	      <div class="row">
    57	
    58	        <div class="col-sm-8 blog-main">
    59	          {% for  i  in  a %}
    60	          <div class="blog-post">
    61	            <h2 class="blog-post-title">返回列表元素{{ i }}</h2>
    62	            <p>返回一个字符串
    63	             {{  b  }}
    64	            </p>
    65	          </div><!-- /.blog-post -->
    66	          {% endfor %}
    67	          <nav>
    68	            <ul class="pager">
    69	              <li><a href="#">Previous</a></li>
    70	              <li><a href="#">Next</a></li>
    71	            </ul>
    72	          </nav>
    73	
    74	        </div><!-- /.blog-main -->
    75	
    76	        <div class="col-sm-3 col-sm-offset-1 blog-sidebar">
    77	          <div class="sidebar-module sidebar-module-inset">
    78	            <h4>About</h4>
    79	          </div>
    80	          <div class="sidebar-module">
    81	            <h4>Archives</h4>
    82	            <ol class="list-unstyled">
    83	              <li><a href="#">March 2014</a></li>
    84	              <li><a href="#">February 2014</a></li>
    85	              <li><a href="#">January 2014</a></li>
    86	              <li><a href="#">December 2013</a></li>
    87	              <li><a href="#">November 2013</a></li>
    88	              <li><a href="#">October 2013</a></li>
    89	              <li><a href="#">September 2013</a></li>
    90	              <li><a href="#">August 2013</a></li>
    91	              <li><a href="#">July 2013</a></li>
    92	              <li><a href="#">June 2013</a></li>
    93	              <li><a href="#">May 2013</a></li>
    94	              <li><a href="#">April 2013</a></li>
    95	            </ol>
    96	          </div>
    97	          <div class="sidebar-module">
    98	            <h4>Elsewhere</h4>
    99	            <ol class="list-unstyled">
   100	              <li><a href="#">GitHub</a></li>
   101	              <li><a href="#">Twitter</a></li>
   102	              <li><a href="#">Facebook</a></li>
   103	            </ol>
   104	          </div>
   105	        </div><!-- /.blog-sidebar -->
   106	
   107	      </div><!-- /.row -->
   108	
   109	    </div><!-- /.container -->
   110	
   111	    <footer class="blog-footer">
   112	      <p>Blog template built for <a href="http://getbootstrap.com">Bootstrap</a> by <a href="https://twitter.com/mdo">@mdo</a>.</p>
   113	      <p>
   114	        <a href="#">Back to top</a>
   115	      </p>
   116	    </footer>
   117	
   118	
   119	    <!-- Bootstrap core JavaScript
   120	    ================================================== -->
   121	    <!-- Placed at the end of the document so the pages load faster -->
   122	    <script src="https://cdn.bootcss.com/jquery/1.12.4/jquery.min.js"></script>
   123	    <script>window.jQuery || document.write('<script src="../../assets/js/vendor/jquery.min.js"><\/script>')</script>
   124	    <script src="https://cdn.bootcss.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
   125	    <!-- IE10 viewport hack for Surface/desktop Windows 8 bug -->
   126	    <script src="../../assets/js/ie10-viewport-bug-workaround.js"></script>
   127	  </body>
   128	</html>
   129	
   130	
[root@room9pc01 mysite]# 

http://127.0.0.1:8800/blog/t

用引导程序创建博客的官方示例模板。
返回列表元素0

返回一个字符串 hello world
返回列表元素1

返回一个字符串 hello world
返回列表元素2

返回一个字符串 hello world
返回列表元素3

返回一个字符串 hello world
返回列表元素4

返回一个字符串 hello world


[root@room9pc01 mysite]# pwd
/root/Django/mysite

[root@room9pc01 mysite]# ls   ../
django1120  mysite  pkg1120.txt

[root@room9pc01 mysite]# ls  ../django1120/
bin  include  lib  lib64  pip-selfcheck.json  pyvenv.cfg


[root@room9pc01 mysite]# cat  ../django1120/pyvenv.cfg 
home = /usr/local/bin
include-system-site-packages = false
version = 3.6.7

[root@room9pc01 mysite]# ls   ../django1120/bin/
activate       django-admin     easy_install-3.6  pip3.6       python3
activate.csh   django-admin.py  pip               __pycache__  python3.6
activate.fish  easy_install     pip3              python

[root@room9pc01 mysite]# ls   ../django1120/include/


[root@room9pc01 mysite]# ls   ../django1120/lib/
python3.6
[root@room9pc01 mysite]# ls   ../django1120/lib/python3.6/
site-packages
[root@room9pc01 mysite]# ls   ../django1120/lib/python3.6/site-packages/
django                    __pycache__              setuptools-39.0.1.dist-info
Django-1.11.20.dist-info  pymysql                  sqlalchemy
easy_install.py           PyMySQL-0.9.3.dist-info  SQLAlchemy-1.3.3-py3.6.egg-info
pip                       pytz                     tornado
pip-19.1.dist-info        pytz-2019.1.dist-info    tornado-6.0.2-py3.6.egg-info
pkg_resources             setuptools
[root@room9pc01 mysite]# 

[root@room9pc01 mysite]#  ls  ../
django1120  mysite  pkg1120.txt

[root@room9pc01 mysite]# ls
blog  db.sqlite3  manage.py  mysite

[root@room9pc01 mysite]# du   -sh    ../mysite/
1.9M	../mysite/

[root@room9pc01 mysite]# du    -sh   .
1.9M	.
[root@room9pc01 mysite]# \cp   -r  .   /var/git/PYTHON/pythonScripts/Django1120/

[root@room9pc01 mysite]# \cp   /usr/local/lib/python3.6/site-packages/django/db/models/base.py    /var/git/PYTHON/pythonScripts/Django1120/

[root@room9pc01 mysite]# cd  ../

[root@room9pc01 Django]# ls 
django1120  mysite  pkg1120.txt

[root@room9pc01 Django]# \cp   -r  mysite/   /var/git/PYTHON/pythonScripts/Django1120/











